# =============================================================================
# CONFIGURAÇÃO APICURIO REGISTRY - OBRIGATÓRIA!
# =============================================================================
# ✅ ADICIONE ESTA LINHA!
apicurio.registry.url=${APICURIO_REGISTRY_URL:http://localhost:8081/apis/registry/v2}

# =============================================================================
# CONFIGURAÇÃO GRPC
# =============================================================================
quarkus.grpc.server.port=9000
quarkus.grpc.server.host=${HOST_SERVER:localhost}
quarkus.grpc.server.enable-reflection-service=true

quarkus.grpc.clients.hello.host=${HOST_SERVER:localhost}
quarkus.grpc.clients.hello.port=9000
quarkus.grpc.clients.hello.plain-text=true
quarkus.grpc.clients.hello.deadline=10s

# =============================================================================
# CONFIGURAÇÃO KAFKA
# =============================================================================
kafka.bootstrap.servers=${KAFKA_HOST:localhost}:9092
kafka.group.id=test

# MP Messaging - Outgoing (Produtores)
mp.messaging.outgoing.movies-out.connector=smallrye-kafka
mp.messaging.outgoing.movies-out.topic=movies
mp.messaging.outgoing.movies-out.value.serializer=io.apicurio.registry.serde.jsonschema.JsonSchemaKafkaSerializer
mp.messaging.outgoing.movies-out.apicurio.registry.auto-register=true
mp.messaging.outgoing.movies-out.apicurio.registry.artifact.schema.location=json-schema.json

mp.messaging.outgoing.products-out.connector=smallrye-kafka
mp.messaging.outgoing.products-out.topic=products

mp.messaging.outgoing.prices-out.connector=smallrye-kafka
mp.messaging.outgoing.prices-out.topic=prices

mp.messaging.outgoing.fruit-out.connector=smallrye-kafka
mp.messaging.outgoing.fruit-out.topic=fruit
mp.messaging.outgoing.fruit-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# MP Messaging - Incoming (Consumidores)
mp.messaging.incoming.movies-in.connector=smallrye-kafka
mp.messaging.incoming.movies-in.topic=movies
mp.messaging.incoming.movies-in.value.deserializer=io.apicurio.registry.serde.jsonschema.JsonSchemaKafkaDeserializer
mp.messaging.incoming.movies-in.enable.auto.commit=false
mp.messaging.incoming.movies-in.auto.offset.reset=earliest

mp.messaging.incoming.fruit-in.connector=smallrye-kafka
mp.messaging.incoming.fruit-in.topic=fruit
mp.messaging.incoming.fruit-in.value.deserializer=com.github.fabriciolfj.deserializer.FruitDeserializer
mp.messaging.incoming.fruit-in.isolation.level=read_committed
mp.messaging.incoming.fruit-in.commit-strategy=checkpoint
mp.messaging.incoming.fruit-in.concurrency=3

mp.messaging.incoming.prices-in.connector=smallrye-kafka
mp.messaging.incoming.prices-in.topic=prices
mp.messaging.incoming.prices-in.isolation.level=read_committed
mp.messaging.incoming.prices-in.commit-strategy=checkpoint
mp.messaging.incoming.prices-in.checkpoint.state-store=quarkus-redis
mp.messaging.incoming.prices-in.checkpoint.state-type=com.github.fabriciolfj.model.AveragePrice
mp.messaging.incoming.prices-in.checkpoint.quarkus-redis.client-name=my-redis
mp.messaging.incoming.prices-in.concurrency=3

mp.messaging.incoming.products-in.connector=smallrye-kafka
mp.messaging.incoming.products-in.topic=products

# =============================================================================
# CONFIGURAÇÃO REDIS
# =============================================================================
quarkus.redis.my-redis.hosts=redis://${REDIS_HOST:localhost}:6379
quarkus.redis.hosts=redis://${REDIS_HOST:localhost}:6379

# =============================================================================
# CONFIGURAÇÃO GERAL QUARKUS
# =============================================================================
quarkus.http.port=8080
quarkus.application.name=quarkus-app

quarkus.log.category."io.grpc".level=INFO
quarkus.log.category."io.quarkus.grpc".level=DEBUG

# ===== MÉTRICAS - PROMETHEUS =====
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.http-client.enabled=true
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true

# ===== LOGS - LOKI (formato JSON) =====
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.json=true
quarkus.log.console.json.pretty-print=false
quarkus.log.console.json.additional-field."app".value=${quarkus.application.name}
quarkus.log.console.json.additional-field."host".value=${HOST:localhost}

# ===== TRACES - JAEGER =====
quarkus.otel.enabled=true
quarkus.otel.exporter.otlp.traces.endpoint=http://${JAEGER_HOST:localhost}:4317
quarkus.otel.exporter.otlp.traces.protocol=grpc
quarkus.otel.service.name=${quarkus.application.name}
quarkus.otel.traces.sampler=always_on
quarkus.otel.propagators=tracecontext,baggage

# ===== HEALTH CHECKS =====
quarkus.health.enabled=true

# ===== CONTAINER IMAGE =====
quarkus.container-image.build=true
quarkus.container-image.group=fabricio211
quarkus.container-image.name=app
quarkus.container-image.tag=latest